[{"/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/index.js":"1","/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/reportWebVitals.js":"2","/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/App.js":"3","/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/components/Denomination.js":"4","/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/Styles/Container.js":"5","/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/components/Denomination_Map.js":"6"},{"size":500,"mtime":1610117640539,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610117640540,"results":"9","hashOfConfig":"8"},{"size":348,"mtime":1610123612308,"results":"10","hashOfConfig":"8"},{"size":2180,"mtime":1610122804460,"results":"11","hashOfConfig":"8"},{"size":289,"mtime":1610120827414,"results":"12","hashOfConfig":"8"},{"size":2290,"mtime":1610123567212,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gc9dwb",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},"/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/index.js",[],"/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/reportWebVitals.js",[],"/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/App.js",[],"/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/components/Denomination.js",["28"],"/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/Styles/Container.js",[],["29","30"],"/Users/antoine/Desktop/COURS/3WA/Pro11_React/part4_squelette_router/Exercices/denomination/src/components/Denomination_Map.js",["31"],"import { Component } from \"react\";\n\nconst denomination = [1, 5, 10, 20, 50, 100, 200];\n\nclass Denomination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amount: \"\",\n      tokens: new Map(),// Map est plus optimiser pour stocker et accéder à des données\n      message: \"\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n      message : ''\n    });\n  }\n\n  calculTokens(amount) {\n    const Denomination = [...denomination];\n    Denomination.sort((a, b) => b - a);\n    let q,\n      tokens = new Map();\n    for (const d of Denomination) {\n      if (amount >= d) {\n        q = Math.floor(amount / d);\n        tokens.set(d, q);\n        amount = amount - q * d;\n      }\n    }\n\n    return tokens;\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { amount } = this.state;\n\n    if (amount.trim() === \"\") {\n      this.setState({\n        message: \"Attention vous devez donner un nombre\",\n      });\n\n      return;\n    }\n\n    if (amount <= 0 || parseInt(amount) != amount) {\n      this.setState({\n        message: `Attention le nombre ${amount} n'est pas compatible avec le système`,\n      });\n\n      return;\n    }\n\n    this.setState({\n      tokens: this.calculTokens(amount),\n    });\n  }\n\n  render() {\n    const { tokens, message } = this.state;\n    return (\n      <>\n        <ul>\n          {denomination.map((token, i) => (\n            <li key={i}>{token}</li>\n          ))}\n        </ul>\n        {message && (\n          <p>{message}</p>\n        )}\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <input type=\"text\" name=\"amount\" onChange={this.handleChange} />\n          </div>\n          <div>\n            <button>Calcul</button>\n          </div>\n        </form>\n        {tokens.size > 0 && (\n          <ul>\n             {denomination.map( (d, i) => {\n               if(tokens.has(d))\n                return (\n                  <li key={ i } >Token : {d} Quantity : {tokens.get(d)}</li>\n                )\n\n                return null;\n             }\n          )}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Denomination;\n",{"ruleId":"32","severity":1,"message":"33","line":59,"column":41,"nodeType":"34","messageId":"35","endLine":59,"endColumn":43},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"32","severity":1,"message":"33","line":55,"column":41,"nodeType":"34","messageId":"35","endLine":55,"endColumn":43},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-global-assign","no-unsafe-negation"]